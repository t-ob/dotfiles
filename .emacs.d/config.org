#+TITLE Emacs init
* Packages
** Repositories
   #+BEGIN_SRC emacs-lisp
     (require 'package)
     (add-to-list 'package-archives 
                  '("marmalade" .
                    "http://marmalade-repo.org/packages/"))
     (add-to-list 'package-archives
                  '("melpa" .
                    "http://melpa.milkbox.net/packages/") t)
   #+END_SRC
** Global modes
  #+BEGIN_SRC emacs-lisp
    (require 'uniquify)
    (setq uniquify-buffer-name-style (quote post-forward-angle-brackets))

    (require 'helm-config)
    (helm-mode 1)
  #+END_SRC
* Display
  #+BEGIN_SRC emacs-lisp
    (setq inhibit-splash-screen t)

    (if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
    (if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
    (if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
  #+END_SRC
  
  #+BEGIN_SRC emacs-lisp
    (set-frame-font "Essential PragmataPro-16")
  #+END_SRC

  #+BEGIN_SRC emacs-lisp
    (load-theme 'zenburn t)
  #+END_SRC
* Keybindings
  #+BEGIN_SRC emacs-lisp
    (global-set-key "\C-x\C-m" 'execute-extended-command)
    
    (global-set-key "\C-w" 'backward-kill-word)
    (global-set-key "\C-x\C-k" 'kill-region)
    
    (global-set-key "\C-xg" 'magit-status)
    (global-set-key "\C-cg" 'magit-status)
  #+END_SRC

* Misc
  #+BEGIN_SRC emacs-lisp
    (defalias 'yes-or-no-p 'y-or-n-p)
  #+END_SRC

* Languages

** Lisp
   #+BEGIN_SRC emacs-lisp
     (defun lisp-hook ()
       (rainbow-delimiters-mode)
       (smartparens-mode t))
   #+END_SRC

*** Clojure
    #+BEGIN_SRC emacs-lisp
      (add-hook 'clojure-mode-hook
                'lisp-hook)
    #+END_SRC

    

*** elisp
    #+BEGIN_SRC emacs-lisp
      (add-hook 'emacs-lisp-mode-hook
                'lisp-hook)
    #+END_SRC

* Paths
  #+BEGIN_SRC emacs-lisp
    (exec-path-from-shell-initialize)
  #+END_SRC
